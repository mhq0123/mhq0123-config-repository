<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:context="http://www.springframework.org/schema/context" 
	   xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:oxm="http://www.springframework.org/schema/oxm" 
	   xmlns:jee="http://www.springframework.org/schema/jee" 
	   xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 数据源 druid -->
	<bean id="dataSourceOper" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:comp/env/jdbc/stcs</value>
		</property>
	</bean>	
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">     
	    <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />  
	    <property name="url" value="jdbc:oracle:thin:@172.19.34.6:1521:ORCL" />  
	    <property name="username" value="orclight" />     
	    <property name="password" value="123456" />  
	</bean>      
	
	<!-- tomcat 7 
	<Resource name="jdbc/core"
	      auth="Container"
	      type="javax.sql.DataSource"
	      factory="org.apache.tomcat.jdbc.pool.DataSourceFactory"
	      testWhileIdle="true"
	      testOnBorrow="false"
	      testOnReturn="false"
	      validationQuery="SELECT 1"
	      validationInterval="30000"
	      timeBetweenEvictionRunsMillis="30000"
	      maxActive="50"
	      minIdle="5"
	      maxWait="60000"
	      initialSize="5"
	      removeAbandonedTimeout="60"
	      removeAbandoned="true"
	      logAbandoned="true"
	      minEvictableIdleTimeMillis="30000"
	      jmxEnabled="true"
	      jdbcInterceptors="org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer"
	      username="stcs_user"
	      password="123456"
	      driverClassName="com.mysql.jdbc.Driver"	
	      url="jdbc:mysql://10.0.0.4:3306/stcs?zeroDateTimeBehavior=convertToNull"/>-->
	
		<!-- 数据源 druid -->
	<bean id="druid-log-filter-core" class="com.alibaba.druid.filter.logging.Log4jFilter">
        <property name="statementExecutableSqlLogEnable" value="true" />
  	</bean>
	<bean id="dataSourceCore" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />			<!-- 数据库驱动类 -->
        <property name="url" value="jdbc:mysql://10.0.0.9:3306/stcs?zeroDateTimeBehavior=convertToNull" />	<!-- 链接url -->
        <property name="username" value="stcs_user" />							<!-- 用户名 -->
        <property name="password" value="Biyu5YzU+6sxDRbmWEa3B2uUcImzDo0BuXjTlL505+/pTb+/0Oqd3ou1R6J8+9Fy3CYrM18nBDqf6wAaPgUGOg==" />        							<!-- 密码 -->
        <property name="connectionProperties" value="config.decrypt=true" />		<!-- 解密 -->
        <property name="initialSize" value="5" />									<!-- 初始化连接数量 -->
        <property name="maxActive" value="50" />									<!-- 最大并发连接数 -->
        <!--<property name="maxIdle" value="10" />	 								已失效	 最大空闲连接数 -->
        <property name="minIdle" value="3" />										<!-- 最小空闲连接数 -->
        <property name="maxWait" value="60000" />									<!-- 配置获取连接等待超时的时间 -->   
        <property name="removeAbandoned" value="true" />							<!-- 超过时间限制是否回收 -->
        <property name="removeAbandonedTimeout" value="60" />						<!-- 超过时间限制多长； -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />				<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />				<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="validationQuery" value="select 1" />						<!-- 用来检测连接是否有效的sql，要求是一个查询语句-->
        <property name="testWhileIdle" value="true" />								<!-- 申请连接的时候检测 -->
        <property name="testOnBorrow" value="false" />								<!-- 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
        <property name="testOnReturn" value="false" />								<!-- 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能  -->
        <property name="poolPreparedStatements" value="true" />     				<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="maxPoolPreparedStatementPerConnectionSize" value="50" />	<!-- 每个连接上PSCache的大小 -->
        <property name="filters" value="stat,log4j,wall,config" />       <!--属性类型是字符串，通过别名的方式配置扩展插件，常用的插件: 监控统计用的filter:stat,日志用的filter:log4j,防御SQL注入的filter:wall -->
        <property name="proxyFilters"><list><ref bean="druid-log-filter-core"/></list></property>
    </bean>
    
    <!-- tomcat7 datasource -->
	<bean id="dataSourceCore1" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />			<!-- 数据库驱动类 -->
        <property name="url" value="jdbc:mysql://10.0.0.4:3306/stcs?zeroDateTimeBehavior=convertToNull" />	<!-- 链接url -->
        <property name="username" value="stcs_user" />							<!-- 用户名 -->
        <property name="password" value="123456" />        							<!-- 密码 -->
        <property name="jmxEnabled" value="true" /> 
        <property name="initialSize" value="5" />									<!-- 初始化连接数量 -->
        <property name="maxActive" value="50" />									<!-- 最大并发连接数 -->
        <property name="maxIdle" value="10" />	 									<!-- 最大空闲连接数 -->
        <property name="minIdle" value="3" />										<!-- 最小空闲连接数 -->
        <property name="maxWait" value="60000" />									<!-- 配置获取连接等待超时的时间 -->   
        <property name="removeAbandoned" value="true" />							<!-- 超过时间限制是否回收 -->
        <property name="logAbandoned" value="true" />								
        <property name="removeAbandonedTimeout" value="180" />						<!-- 超过时间限制多长； -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />				<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />				<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="validationQuery" value="select 1" />						<!-- 用来检测连接是否有效的sql，要求是一个查询语句-->
        <property name="validationInterval" value="30000" />						<!-- 用来检测连接是否有效的sql，触发间隔-->
        <property name="testWhileIdle" value="true" />								<!-- 申请连接的时候检测 -->
        <property name="testOnBorrow" value="false" />								<!-- 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
        <property name="testOnReturn" value="false" />								<!-- 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能  -->
        <property name="jdbcInterceptors" value="org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer" />       <!--监控 -->
	</bean>
	
	<!-- MyBatis会话工厂 -->
	<bean id="sqlSessionFactoryOper" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceOper" />
		<property name="configLocation" value="classpath:mybatis/MyBatisMapConfig.xml" />
	</bean>
    
    <!-- 支持注解的事务 -->
	<tx:annotation-driven transaction-manager="transactionManagerOper"/>
    
	<!-- 事务管理器 -->
	<bean id="transactionManagerOper" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceOper" />
		<qualifier value="oper"/>
	</bean>

	<!-- spring封装 -->
	<bean id="jdbcTemplateOper" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSourceOper" />
	</bean>

	<!-- 自动扫描Mapper映射器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.sevenpay,com.sevenpay" />
		<property name="annotationClass" value="org.sevenpay.platform.assist.annotation.MapperScanOper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryOper" />
	</bean>

</beans>
